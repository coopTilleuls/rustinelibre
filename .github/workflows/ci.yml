name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: 'CI'
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: app
          POSTGRES_PASSWORD: "!ChangeMe!"
          POSTGRES_USER: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
              php:
                - 'api/**'
#      - name: Pull images
#        run: docker compose pull
#      - name: Start services
#        run: docker compose up --build -d
#      - name: Wait for services
#        run: |
#          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
#            case $status in
#              starting) sleep 1;;
#              healthy) exit 0;;
#              unhealthy) exit 1;;
#            esac
#          done
#          exit 1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: intl, apcu, json, zip
          ini-values: memory_limit=-1
          tools: pecl, composer, php-cs-fixer
          coverage: none
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Create env config
        run: |
          echo "DATABASE_URL="postgresql://app:!ChangeMe!@127.0.0.1:5432/app?serverVersion=15&charset=utf8" > .env.test.local
          cat .env.test.local
      - name: Install dependencies
        run: composer install
#test